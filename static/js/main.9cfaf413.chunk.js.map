{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/ScrollView.js","Components/Buttons.js","Containers/App.js","serviceWorker.js","index.js"],"names":["Card","props","name","p1","p2","p3","p4","p5","capitalize","string","charAt","toUpperCase","slice","toLowerCase","react_default","a","createElement","className","replace","CardList","items","sort","b","map","item","i","array","Object","entries","Components_Card","key","SearchBox","searchChange","total","count","done_loading","id","concat","resultsLabel","type","placeholder","onChange","ScrollView","style","overflowY","border","height","children","Buttons","btnClick","cursor","pointerEvents","color","opacity","disabled","onClick","API_ADDR","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","search_field","target","value","onBtnClick","data","btn_id","parseInt","fetch2","url","Promise","resolve","reject","fetch","then","resp","json","swapi","state","results","next","resolvee","urls","catch","err","console","log","finally","planets","starships","vehicles","people","films","species","_this2","filteredItems","filter","includes","title","Components_Buttons","Components_SearchBox","length","Components_ScrollView","Components_CardList","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_Containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9cfaf413.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n\tconst {name, p1, p2, p3, p4, p5} = props;\n\n\tconst capitalize = (string) => {\n\t\tif(typeof string === \"string\"){\n    \t\treturn string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n\t\t}\n\t\telse{\n\t\t\treturn string;\n\t\t}\n\t}\n\n\treturn(\n\t\t<div className='tc bg-yellow br3 ma2 pa2 dib grow bw2 b--black ba mw6'>\n\t\t\t<h3>{name}</h3>\n\t\t\t<div className='tl ph4'>\n\t\t\t\t<p className=''><strong>{capitalize(p1[0]).replace('_', ' ')}: </strong>{capitalize(p1[1])}</p>\n\t\t\t\t<p className=''><strong>{capitalize(p2[0]).replace('_', ' ')}: </strong>{capitalize(p2[1])}</p>\n\t\t\t\t<p className=''><strong>{capitalize(p3[0]).replace('_', ' ')}: </strong>{capitalize(p3[1])}</p>\n\t\t\t\t<p className=''><strong>{capitalize(p4[0]).replace('_', ' ')}: </strong>{capitalize(p4[1])}</p>\n\t\t\t\t<p className=''><strong>{capitalize(p5[0]).replace('_', ' ')}: </strong>{capitalize(p5[1])}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = (props) => {\n\tlet {items} = props;\n\titems = items.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\n\treturn(\n\t\t<div className='pa3'>\n\t\t\t{items.map((item, i) => {\n\t\t\t\tconst array = Object.entries(item);\n\t\t\t\treturn(\n\t\t\t\t\t<Card key={i} name={array[0][1]} p1={array[1]} p2={array[2]} p3={array[3]} p4={array[4]} p5={array[5]} />\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = (props) => {\n\tconst {searchChange, total, count, done_loading} = props;\n\tconst resultsLabel = (count, total) => {\n\t\tif(!done_loading || total > 0){\n\t\t\treturn <h1 id='results_label'>{`Results Loaded: ${count}/${total}`}</h1>\n\t\t}\n\t\telse if(total === 0 || typeof total === \"undefined\"){\n\t\t\treturn <h1 id='results_label'>Please select a category.</h1>\n\t\t}\n\t}\n\treturn(\n\t\t<div className='o-90 glow:focus pb3'>\n\t\t\t{resultsLabel(count, total)}\n\t\t\t<input className='mt1 bg-near-white pa3 ba bw2 br2' type='search' placeholder='Search...' onChange={searchChange}/>\n\t\t</div>\n\t)\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst ScrollView = (props) => {\n\treturn(\n\t\t<div className= 'pa3' style={{overflowY: 'scroll', border: '3px solid black', height: '800px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t)\n}\n\nexport default ScrollView;","import React from 'react';\n\nconst Buttons = (props) => {\n\tconst {btnClick, done_loading} = props;\n\tlet style;\n\tif(!done_loading){\n\t\tstyle = {\n\t\t\t'cursor': 'not-allowed',\n\t        'pointerEvents': 'none',\n\t        'color': '#c0c0c0',\n\t        'opacity': '0.65'\n\t\t}\n\t}\n\treturn(\n\t\t<div className='flex-wrap'>\n\t\t\t<button style={style} id='0' disabled={!done_loading} className='o-90 bg-near-black yellow tc ma2 ph4 pv2 br4 grow bw2 b--yellow ba' type=\"button\" onClick={btnClick}>Planets</button>\n\t\t\t<button style={style} id='1' disabled={!done_loading} className='o-90 bg-near-black yellow tc ma2 ph4 pv2 br4 grow bw2 b--yellow ba' type=\"button\" onClick={btnClick}>Spaceships</button>\n\t\t\t<button style={style} id='2' disabled={!done_loading} className='o-90 bg-near-black yellow tc ma2 ph4 pv2 br4 grow bw2 b--yellow ba' type=\"button\" onClick={btnClick}>Vehicles</button>\n\t\t\t<button style={style} id='3' disabled={!done_loading} className='o-90 bg-near-black yellow tc ma2 ph4 pv2 br4 grow bw2 b--yellow ba' type=\"button\" onClick={btnClick}>People</button>\n\t\t\t<button style={style} id='4' disabled={!done_loading} className='o-90 bg-near-black yellow tc ma2 ph4 pv2 br4 grow bw2 b--yellow ba' type=\"button\" onClick={btnClick}>Films</button>\n\t\t\t<button style={style} id='5' disabled={!done_loading} className='o-90 bg-near-black yellow tc ma2 ph4 pv2 br4 grow bw2 b--yellow ba' type=\"button\" onClick={btnClick}>Species</button>\n\t\t</div>\n\t)\n}\n\nexport default Buttons;","/**\nWritten by Jay Li: https://github.com/jayli3n\n*/\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport CardList from '../Components/CardList';\nimport SearchBox from '../Components/SearchBox';\nimport ScrollView from '../Components/ScrollView';\nimport Buttons from '../Components/Buttons';\n\nconst API_ADDR = 'https://swapi.co/api/';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      data: [],\n      search_field: '',\n      total: 0,\n      done_loading: true\n    }\n    this.urls = []\n\n    fetch(API_ADDR).then(resp => resp.json()).then(results => {\n      this.urls = [\n        results.planets,\n        results.starships,\n        results.vehicles,\n        results.people,\n        results.films,\n        results.species\n      ];\n    })\n  }\n\n  onSearchChange = (event) => {\n    this.setState({search_field: event.target.value});\n  }\n\n  onBtnClick = (event) => {\n    this.setState({data: []});\n    this.setState({total: 0});\n    this.setState({done_loading: false});\n    const btn_id = parseInt(event.target.id, 10);\n\n    const fetchEverything = (param) => {\n      \n        const fetch2 = (url) => {\n          return new Promise((resolve, reject) => {\n            fetch(url).then(resp => resp.json()).then(swapi => {\n              this.setState({data: this.state.data.concat(swapi.results)});\n              this.setState({total: swapi.count});\n              if(swapi.next === null){\n                resolve();\n              }\n              else{\n                fetch2(swapi.next).then(resolvee => {\n                  resolve(resolvee);\n                });\n              }\n            })\n          })\n        }\n        fetch2(param).then(() => this.setState({done_loading: true}))\n        .catch(err => console.log('An error has occurred: ', err))\n        .finally(() => this.setState({done_loading: true}));\n    }\n    fetchEverything(this.urls[btn_id]);\n  }\n\n  render() {\n    let filteredItems = this.state.data.filter(item => {\n      if(typeof item.name !== \"undefined\"){\n        return item.name.toLowerCase().includes(this.state.search_field.toLowerCase());\n      }\n      else if(typeof item.title !== \"undefined\"){\n        return item.title.toLowerCase().includes(this.state.search_field.toLowerCase());\n      }\n      else{\n        return {};\n      }\n    })\n\n    return (\n      <div className=\"tc f5\">\n        <h1 id='title'>Star Wars DB</h1>\n        <Buttons btnClick={this.onBtnClick} done_loading={this.state.done_loading}/>\n        <SearchBox searchChange={this.onSearchChange} count={this.state.data.length} total={this.state.total} done_loading={this.state.done_loading}/>\n        <ScrollView>\n        \t<CardList items={filteredItems}/>\n        </ScrollView>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\nWritten by Jay Li: https://github.com/jayli3n\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}